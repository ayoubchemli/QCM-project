{
        "title": "Object-Oriented Programming",
        "description": "Test your knowledge of classes, objects, inheritance, and encapsulation in Python.",
        "questions_count": 8,
        "time_estimate": "30 mins",
        "difficulty": "Intermediate",
        "is_new": true,
        "questions": [
            {
                "question": "Which keyword is used to define a class in Python?",
                "answers": [
                    "class",
                    "def",
                    "object",
                    "self"
                ],
                "correctAnswer": 0
            },
            {
                "question": "What does the `__init__` method in a class do?",
                "answers": [
                    "Initializes an object",
                    "Deletes an object",
                    "Creates a new class",
                    "Defines a private method"
                ],
                "correctAnswer": 0
            },
            {
                "question": "How do you create an object of a class named `Car`?",
                "answers": [
                    "obj = class Car()",
                    "obj = Car()",
                    "obj = new Car()",
                    "obj = Car.create()"
                ],
                "correctAnswer": 1
            },
            {
                "question": "Which keyword is used to inherit from another class?",
                "answers": [
                    "super",
                    "self",
                    "base",
                    "class"
                ],
                "correctAnswer": 0
            },
            {
                "question": "Which of the following indicates that a method is private in Python?",
                "answers": [
                    "It starts with a double underscore (__)",
                    "It ends with a double underscore (__)",
                    "It starts with a single underscore (_)",
                    "It starts with the keyword private"
                ],
                "correctAnswer": 0
            },
            {
                "question": "What is the purpose of the `self` parameter in class methods?",
                "answers": [
                    "It refers to the current instance of the class",
                    "It is a placeholder for arguments",
                    "It specifies the superclass",
                    "It defines a static method"
                ],
                "correctAnswer": 0
            },
            {
                "question": "What is method overriding in Python?",
                "answers": [
                    "A child class method with the same name as the parent class method",
                    "Changing the arguments of a method",
                    "Defining two methods with the same name in the same class",
                    "Defining a method without a name"
                ],
                "correctAnswer": 0
            },
            {
                "question": "What does `isinstance(obj, Class)` do in Python?",
                "answers": [
                    "Checks if `obj` is an instance of `Class` or its subclass",
                    "Creates an instance of `Class`",
                    "Deletes an instance of `Class`",
                    "Checks if `obj` is a superclass of `Class`"
                ],
                "correctAnswer": 0
            }
        ]
}