[
    {
        "chapter_id": 0,
        "title": "Python Basics",
        "description": "Test your understanding of Python's basic syntax, data types, and control structures.",
        "questions_count": 8,
        "time_estimate": "20 mins",
        "difficulty": "Beginner",
        "is_new": true,
        "questions": [
            {
                "question": "Which of the following is used to print a message in Python?",
                "answers": [
                    "echo",
                    "printf",
                    "print",
                    "cout"
                ],
                "correctAnswer": 2,
                "explanation": "In Python, the 'print()' function is the standard way to output text or variables to the console. Unlike other programming languages that use 'echo' (PHP), 'printf' (C), or 'cout' (C++), Python uses the simple and straightforward 'print' function."
            },
            {
                "question": "What is the output of the expression `5 + 3 * 2` in Python?",
                "answers": [
                    "10",
                    "16",
                    "11",
                    "8"
                ],
                "correctAnswer": 2,
                "explanation": "Python follows the standard order of operations (PEMDAS). In this expression, multiplication (3 * 2 = 6) is performed before addition (5 + 6 = 11). The result is 11 because Python respects mathematical precedence rules."
            },
            {
                "question": "Which data type is used to store a sequence of characters in Python?",
                "answers": [
                    "int",
                    "str",
                    "float",
                    "bool"
                ],
                "correctAnswer": 1,
                "explanation": "In Python, the 'str' (string) data type is used to store text or sequences of characters. Strings can be created using single quotes ('') or double quotes (\"\") and can contain letters, numbers, symbols, and whitespace."
            },
            {
                "question": "How do you start a for loop in Python?",
                "answers": [
                    "for i in range(10):",
                    "for (i=0; i<10; i++)",
                    "foreach (i in range(10))",
                    "loop i to 10"
                ],
                "correctAnswer": 0,
                "explanation": "Python's for loop syntax uses the 'for' keyword followed by a variable name, the 'in' keyword, and an iterable (like range()). The 'for i in range(10):' syntax is the correct way to create a loop that iterates 10 times in Python."
            },
            {
                "question": "What does `len()` function do in Python?",
                "answers": [
                    "Adds numbers",
                    "Returns the length of a list, string, or tuple",
                    "Converts data types",
                    "Checks data type"
                ],
                "correctAnswer": 1,
                "explanation": "The len() function in Python returns the number of items in an object. It can be used with various sequence types like strings (number of characters), lists (number of elements), tuples, or dictionaries (number of key-value pairs)."
            },
            {
                "question": "Which keyword is used to define a function in Python?",
                "answers": [
                    "def",
                    "func",
                    "function",
                    "lambda"
                ],
                "correctAnswer": 0,
                "explanation": "In Python, functions are defined using the 'def' keyword followed by the function name and parentheses. While 'lambda' is used for creating small anonymous functions, 'def' is the standard way to define regular functions."
            },
            {
                "question": "Which of the following is a correct way to write a comment in Python?",
                "answers": [
                    "# This is a comment",
                    "// This is a comment",
                    "/* This is a comment */",
                    "/* This is a comment"
                ],
                "correctAnswer": 0,
                "explanation": "Python uses the hash symbol (#) for single-line comments. Unlike other languages that use // or /* */, Python keeps it simple with just #. Everything after # on the same line is treated as a comment and ignored by the interpreter."
            },
            {
                "question": "What will be the output of `type(42)` in Python?",
                "answers": [
                    "<class 'int'>",
                    "<class 'str'>",
                    "<class 'float'>",
                    "<class 'bool'>"
                ],
                "correctAnswer": 0,
                "explanation": "The type() function returns the data type of an object. Since 42 is an integer, type(42) returns '<class 'int'>'. This is Python's way of indicating that the number 42 belongs to the integer class."
            }
        ]
    },
    {
        "chapter_id": 1,
        "title": "Object-Oriented Programming",
        "description": "Test your knowledge of classes, objects, inheritance, and encapsulation in Python.",
        "questions_count": 8,
        "time_estimate": "30 mins",
        "difficulty": "Intermediate",
        "is_new": true,
        "questions": [
            {
                "question": "Which keyword is used to define a class in Python?",
                "answers": [
                    "class",
                    "def",
                    "object",
                    "self"
                ],
                "correctAnswer": 0,
                "explanation": "The 'class' keyword is used to define a class in Python. It's followed by the class name and a colon. This keyword tells Python that you're creating a blueprint for objects with their own attributes and methods."
            },
            {
                "question": "What does the `__init__` method in a class do?",
                "answers": [
                    "Initializes an object",
                    "Deletes an object",
                    "Creates a new class",
                    "Defines a private method"
                ],
                "correctAnswer": 0,
                "explanation": "The __init__ method is a special method (constructor) that's automatically called when a new object is created. It initializes the attributes of the new object and sets up its initial state."
            },
            {
                "question": "How do you create an object of a class named `Car`?",
                "answers": [
                    "obj = class Car()",
                    "obj = Car()",
                    "obj = new Car()",
                    "obj = Car.create()"
                ],
                "correctAnswer": 1,
                "explanation": "In Python, objects are created by calling the class name as if it were a function. Unlike other languages that use the 'new' keyword, Python simply uses the class name followed by parentheses: Car()."
            },
            {
                "question": "Which keyword is used to inherit from another class?",
                "answers": [
                    "super",
                    "self",
                    "base",
                    "class"
                ],
                "correctAnswer": 0,
                "explanation": "The 'super()' function is used to call methods from a parent class. While inheritance is specified in the class definition using parentheses, super() allows you to explicitly call the parent class's methods from within the child class."
            },
            {
                "question": "Which of the following indicates that a method is private in Python?",
                "answers": [
                    "It starts with a double underscore (__)",
                    "It ends with a double underscore (__)",
                    "It starts with a single underscore (_)",
                    "It starts with the keyword private"
                ],
                "correctAnswer": 0,
                "explanation": "In Python, name mangling is done by prefixing a method or attribute with double underscores (__). This makes it harder (but not impossible) to access from outside the class, implementing a form of privacy through name mangling."
            },
            {
                "question": "What is the purpose of the `self` parameter in class methods?",
                "answers": [
                    "It refers to the current instance of the class",
                    "It is a placeholder for arguments",
                    "It specifies the superclass",
                    "It defines a static method"
                ],
                "correctAnswer": 0,
                "explanation": "The 'self' parameter refers to the current instance of the class. It's automatically passed to instance methods and allows you to access and modify the object's attributes and call its methods within the class definition."
            },
            {
                "question": "What is method overriding in Python?",
                "answers": [
                    "A child class method with the same name as the parent class method",
                    "Changing the arguments of a method",
                    "Defining two methods with the same name in the same class",
                    "Defining a method without a name"
                ],
                "correctAnswer": 0,
                "explanation": "Method overriding occurs when a child class provides a specific implementation for a method that is already defined in its parent class. This allows child classes to change or extend the behavior of inherited methods."
            },
            {
                "question": "What does `isinstance(obj, Class)` do in Python?",
                "answers": [
                    "Checks if `obj` is an instance of `Class` or its subclass",
                    "Creates an instance of `Class`",
                    "Deletes an instance of `Class`",
                    "Checks if `obj` is a superclass of `Class`"
                ],
                "correctAnswer": 0,
                "explanation": "The isinstance() function checks if an object is an instance of a specified class or any of its subclasses. It returns True if the object is an instance of the class or a subclass thereof, and False otherwise."
            }
        ]
    },
    {
        "chapter_id": 2,
        "title": "Libraries and Frameworks",
        "description": "Test your familiarity with popular Python libraries like NumPy, Pandas, and Flask.",
        "questions_count": 8,
        "time_estimate": "25 mins",
        "difficulty": "Advanced",
        "is_new": true,
        "questions": [
            {
                "question": "Which library is commonly used for numerical computations in Python?",
                "answers": [
                    "NumPy",
                    "Pandas",
                    "Flask",
                    "Requests"
                ],
                "correctAnswer": 0,
                "explanation": "NumPy (Numerical Python) is the fundamental package for scientific computing in Python. It provides support for large, multi-dimensional arrays and matrices, along with a large collection of mathematical functions to operate on these arrays."
            },
            {
                "question": "What does the Pandas library primarily deal with?",
                "answers": [
                    "Numerical arrays",
                    "Data manipulation and analysis",
                    "Machine learning",
                    "Web development"
                ],
                "correctAnswer": 1,
                "explanation": "Pandas is primarily used for data manipulation and analysis. It provides data structures like DataFrame and Series, making it easier to work with structured data, perform data analysis, clean data, and handle missing values."
            },
            {
                "question": "Which function is used to create a DataFrame in Pandas?",
                "answers": [
                    "pd.DataFrame()",
                    "pd.Array()",
                    "pd.Table()",
                    "pd.Structure()"
                ],
                "correctAnswer": 0,
                "explanation": "pd.DataFrame() is the constructor function used to create a DataFrame in Pandas. It can accept various data formats as input, including dictionaries, lists, NumPy arrays, or other DataFrames."
            },
            {
                "question": "Which Python library is used for creating web applications?",
                "answers": [
                    "Django",
                    "Flask",
                    "Both",
                    "None of the above"
                ],
                "correctAnswer": 2,
                "explanation": "Both Django and Flask are popular web frameworks in Python. Django is a full-featured framework with many built-in capabilities, while Flask is a lightweight, flexible framework. Both can be used to create web applications, but they serve different needs."
            },
            {
                "question": "What is Matplotlib used for?",
                "answers": [
                    "Image processing",
                    "Data visualization",
                    "Machine learning",
                    "Web scraping"
                ],
                "correctAnswer": 1,
                "explanation": "Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python. It's used to create various types of plots, charts, and graphs to visualize data effectively."
            },
            {
                "question": "Which library is used for deep learning in Python?",
                "answers": [
                    "TensorFlow",
                    "SciPy",
                    "NumPy",
                    "Pandas"
                ],
                "correctAnswer": 0,
                "explanation": "TensorFlow is a popular open-source library for deep learning and machine learning. It provides a flexible system of tools, libraries, and community resources that lets researchers push the state-of-the-art in ML and developers easily build ML-powered applications."
            },
            {
                "question": "What is the purpose of the `Flask` library?",
                "answers": [
                    "Data analysis",
                    "Web development",
                    "Machine learning",
                    "Numerical computation"
                ],
                "correctAnswer": 1,
                "explanation": "Flask is a lightweight WSGI web application framework. It's designed to be simple and easy to use, making it great for building web applications, APIs, and microservices. Flask follows a minimalist approach but can be extended with various plugins."
            },
            {
                "question": "Which library is used to handle HTTP requests in Python?",
                "answers": [
                    "Requests",
                    "Socket",
                    "HttpClient",
                    "Django"
                ],
                "correctAnswer": 0,
                "explanation": "The Requests library is the standard for making HTTP requests in Python. It abstracts the complexities of making requests behind a beautiful, simple API so that you can focus on interacting with services and consuming data in your application."
            }
        ]
    }
]